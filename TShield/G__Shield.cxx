//
// File generated by /opt/shield/etc//bin/rootcint at Tue May  5 17:00:36 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIoptdIfsdIusersdIkazymaidImybackupdISavedIPCdIworkdIShielddIshieldmIbuilddITShielddIG__Shield
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Shield.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TShield_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TShield(void *p = 0);
   static void *newArray_TShield(Long_t size, void *p);
   static void delete_TShield(void *p);
   static void deleteArray_TShield(void *p);
   static void destruct_TShield(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TShield*)
   {
      ::TShield *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TShield >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TShield", ::TShield::Class_Version(), "./inc/TShield.h", 33,
                  typeid(::TShield), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TShield::Dictionary, isa_proxy, 4,
                  sizeof(::TShield) );
      instance.SetNew(&new_TShield);
      instance.SetNewArray(&newArray_TShield);
      instance.SetDelete(&delete_TShield);
      instance.SetDeleteArray(&deleteArray_TShield);
      instance.SetDestructor(&destruct_TShield);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TShield*)
   {
      return GenerateInitInstanceLocal((::TShield*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TShield*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TShield::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TShield::Class_Name()
{
   return "TShield";
}

//______________________________________________________________________________
const char *TShield::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TShield*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TShield::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TShield*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TShield::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TShield*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TShield::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TShield*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TShield::Streamer(TBuffer &R__b)
{
   // Stream an object of class TShield.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TShield::Class(),this);
   } else {
      R__b.WriteClassBuffer(TShield::Class(),this);
   }
}

//______________________________________________________________________________
void TShield::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TShield.
      TClass *R__cl = ::TShield::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticlesFlyOut", &fParticlesFlyOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticlesAbsorbed", &fParticlesAbsorbed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParticlesNumFlyOut", &ParticlesNumFlyOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParticlesNumAbsorbed", &ParticlesNumAbsorbed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "autoseed", &autoseed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeometry", &fGeometry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tree", &tree);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TShield(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TShield : new ::TShield;
   }
   static void *newArray_TShield(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TShield[nElements] : new ::TShield[nElements];
   }
   // Wrapper around operator delete
   static void delete_TShield(void *p) {
      delete ((::TShield*)p);
   }
   static void deleteArray_TShield(void *p) {
      delete [] ((::TShield*)p);
   }
   static void destruct_TShield(void *p) {
      typedef ::TShield current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TShield

/********************************************************
* /opt/fs/users/kazymai/mybackup/Save/PC/work/Shield/shield-build/TShield/G__Shield.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Shield();

extern "C" void G__set_cpp_environmentG__Shield() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("inc/TShield.h");
  G__cpp_reset_tagtableG__Shield();
}
#include <new>
extern "C" int G__cpp_dllrevG__Shield() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TShield */
static int G__G__Shield_645_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TShield::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TShield::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TShield::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TShield::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TShield*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TShield::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TShield::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TShield::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TShield::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TShield*) G__getstructoffset())->GetFlyOutArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TShield*) G__getstructoffset())->GetAbsorbedArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TShield*) G__getstructoffset())->GetFlyOutNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TShield*) G__getstructoffset())->GetAbsorbedNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TShield* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TShield[n];
     } else {
       p = new((void*) gvp) TShield[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TShield;
     } else {
       p = new((void*) gvp) TShield;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ShieldLN_TShield));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TShield::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->SetRandomSeed((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->SetRandomSeed();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TShield*) G__getstructoffset())->GetRandomSeed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TShield*) G__getstructoffset())->SetAutoSeed((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TShield*) G__getstructoffset())->SetAutoSeed();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->SetGeometry((TGeoManager*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TShield*) G__getstructoffset())->GetGeometry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->SetIncidentParticle((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TShield*) G__getstructoffset())->GetIncidentParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->SetEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TShield*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->SetAProj((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TShield*) G__getstructoffset())->GetAProj());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->SetZProj((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TShield*) G__getstructoffset())->GetZProj());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->SetStartPoint((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->SetDirection((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->SetDirectionVector((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->GenerateEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Shield_645_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TShield*) G__getstructoffset())->RUNSTANDALONE();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TShield G__TTShield;
static int G__G__Shield_645_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TShield*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TShield*) (soff+(sizeof(TShield)*i)))->~G__TTShield();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TShield*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TShield*) (soff))->~G__TTShield();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TShield */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Shield {
 public:
  G__Sizep2memfuncG__Shield(): p(&G__Sizep2memfuncG__Shield::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Shield::*p)();
};

size_t G__get_sizep2memfuncG__Shield()
{
  G__Sizep2memfuncG__Shield a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Shield() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Shield() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__ShieldLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShieldLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShieldLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShieldLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShieldLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__ShieldLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShieldLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShieldLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShieldLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShieldLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ShieldLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ShieldLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__ShieldLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__ShieldLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__ShieldLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__ShieldLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__ShieldLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__G__ShieldLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__G__ShieldLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ShieldLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShieldLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ShieldLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ShieldLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__G__ShieldLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__ShieldLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__G__ShieldLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*,less<long> >",117,G__get_linked_tagnum(&G__G__ShieldLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,Int_t>",117,G__get_linked_tagnum(&G__G__ShieldLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ShieldLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ShieldLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ShieldLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__ShieldLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TShield */
static void G__setup_memvarTShield(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ShieldLN_TShield));
   { TShield *p; p=(TShield*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShieldLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShieldLN_TShield),-1,-2,2,"fInstance=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShieldLN_TClonesArray),-1,-1,2,"fParticlesFlyOut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShieldLN_TClonesArray),-1,-1,2,"fParticlesAbsorbed=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ParticlesNumFlyOut=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ParticlesNumAbsorbed=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,2,"ParticlesNumFlyOutMax=10000LL",0,"TODO");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,2,"ParticlesNumAbsorbedMax=10000LL",0,"TODO");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"autoseed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShieldLN_TGeoManager),-1,-1,2,"fGeometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ShieldLN_TTree),-1,-1,4,"tree=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Shield() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTShield(void) {
   /* TShield */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ShieldLN_TShield));
   G__memfunc_setup("Class",502,G__G__Shield_645_0_1, 85, G__get_linked_tagnum(&G__G__ShieldLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TShield::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Shield_645_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TShield::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Shield_645_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TShield::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Shield_645_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TShield::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__Shield_645_0_5, 85, G__get_linked_tagnum(&G__G__ShieldLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__Shield_645_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__Shield_645_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Shield_645_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Shield_645_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TShield::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Shield_645_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TShield::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Shield_645_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TShield::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Shield_645_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TShield::DeclFileLine) ), 0);
   G__memfunc_setup("GetFlyOutArray",1410,G__G__Shield_645_0_13, 85, G__get_linked_tagnum(&G__G__ShieldLN_TClonesArray), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAbsorbedArray",1601,G__G__Shield_645_0_14, 85, G__get_linked_tagnum(&G__G__ShieldLN_TClonesArray), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFlyOutNum",1203,G__G__Shield_645_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAbsorbedNum",1394,G__G__Shield_645_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TShield",685,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ShieldLN_TShield), -1, 0, 1, 1, 4, 0, "u 'TShield' - 11 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ShieldLN_TShield), -1, 1, 1, 1, 4, 0, "u 'TShield' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitCallbacks",1300,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeoNextCallback",1479,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 6, 3, 4, 0, 
"f - - 0 - - f - - 0 - - "
"f - - 0 - - f - - 0 - - "
"f - - 0 - - f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeoDistCallback",1468,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 6, 3, 4, 0, 
"f - - 0 - - f - - 0 - - "
"f - - 0 - - f - - 0 - - "
"f - - 0 - - f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TreeCallback",1181,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 3, 4, 0, "U 'shield_tree_node' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTreeParticle",1485,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'shield_tree_node' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFliedOutParticle",1881,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'shield_tree_node' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAbsorbedParticle",1887,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'shield_tree_node' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindBoundary",1221,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 6, 1, 4, 0, 
"f - - 0 - x f - - 0 - y "
"f - - 0 - z f - - 0 - vx "
"f - - 0 - vy f - - 0 - vz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextVolume",1335,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 6, 1, 4, 0, 
"f - - 0 - x f - - 0 - y "
"f - - 0 - z f - - 0 - vx "
"f - - 0 - vy f - - 0 - vz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TShield",685,G__G__Shield_645_0_28, 105, G__get_linked_tagnum(&G__G__ShieldLN_TShield), -1, 0, 0, 1, 1, 0, "", "creates a unique instance of TShield", (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__G__Shield_645_0_29, 85, G__get_linked_tagnum(&G__G__ShieldLN_TShield), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TShield* (*)())(&TShield::Instance) ), 0);
   G__memfunc_setup("SetRandomSeed",1294,G__G__Shield_645_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - seed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRandomSeed",1294,G__G__Shield_645_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRandomSeed",1282,G__G__Shield_645_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAutoSeed",1094,G__G__Shield_645_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' flag", "initially false    ", (void*) NULL, 0);
   G__memfunc_setup("SetGeometry",1144,G__G__Shield_645_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGeoManager' - 0 - geom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeometry",1132,G__G__Shield_645_0_35, 85, G__get_linked_tagnum(&G__G__ShieldLN_TGeoManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLuxCount",1134,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - luxcnt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLuxCount",1122,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLCASC",658,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 '0' lcasc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLCASC",646,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIncidentParticle",1934,G__G__Shield_645_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - jpart", "these functions may be more smart ", (void*) NULL, 0);
   G__memfunc_setup("GetIncidentParticle",1922,G__G__Shield_645_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__G__Shield_645_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__G__Shield_645_0_43, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAProj",776,G__G__Shield_645_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - aproj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAProj",764,G__G__Shield_645_0_45, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZProj",801,G__G__Shield_645_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - zproj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZProj",789,G__G__Shield_645_0_47, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartPoint",1348,G__G__Shield_645_0_48, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirection",1229,G__G__Shield_645_0_49, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - cos_theta f - 'Float_t' 0 - sin_phi "
"f - 'Float_t' 0 - cos_phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirectionVector",1856,G__G__Shield_645_0_50, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - fx f - 'Float_t' 0 - cy "
"f - 'Float_t' 0 - cz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateEvent",1325,G__G__Shield_645_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RUNSTANDALONE",990,G__G__Shield_645_0_52, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TShield", 811, G__G__Shield_645_0_53, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Shield() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Shield() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Shield() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__ShieldLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR = { "map<long,int,less<long>,allocator<pair<const long,int> > >" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TGeoManager = { "TGeoManager" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR = { "map<long,TGeoNavigatorArray*,less<long>,allocator<pair<const long,TGeoNavigatorArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__ShieldLN_shield_tree_node = { "shield_tree_node" , 115 , -1 };
G__linked_taginfo G__G__ShieldLN_TShield = { "TShield" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Shield() {
  G__G__ShieldLN_TClass.tagnum = -1 ;
  G__G__ShieldLN_TBuffer.tagnum = -1 ;
  G__G__ShieldLN_TMemberInspector.tagnum = -1 ;
  G__G__ShieldLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__ShieldLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShieldLN_TClonesArray.tagnum = -1 ;
  G__G__ShieldLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__ShieldLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShieldLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__ShieldLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__ShieldLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__ShieldLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__ShieldLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__G__ShieldLN_TGeoManager.tagnum = -1 ;
  G__G__ShieldLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__G__ShieldLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ShieldLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__ShieldLN_TTree.tagnum = -1 ;
  G__G__ShieldLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__ShieldLN_shield_tree_node.tagnum = -1 ;
  G__G__ShieldLN_TShield.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Shield() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TGeoManager);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ShieldLN_shield_tree_node);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ShieldLN_TShield),sizeof(TShield),-1,265984,"TShield",G__setup_memvarTShield,G__setup_memfuncTShield);
}
extern "C" void G__cpp_setupG__Shield(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Shield()");
  G__set_cpp_environmentG__Shield();
  G__cpp_setup_tagtableG__Shield();

  G__cpp_setup_inheritanceG__Shield();

  G__cpp_setup_typetableG__Shield();

  G__cpp_setup_memvarG__Shield();

  G__cpp_setup_memfuncG__Shield();
  G__cpp_setup_globalG__Shield();
  G__cpp_setup_funcG__Shield();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Shield();
  return;
}
class G__cpp_setup_initG__Shield {
  public:
    G__cpp_setup_initG__Shield() { G__add_setup_func("G__Shield",(G__incsetup)(&G__cpp_setupG__Shield)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Shield() { G__remove_setup_func("G__Shield"); }
};
G__cpp_setup_initG__Shield G__cpp_setup_initializerG__Shield;

